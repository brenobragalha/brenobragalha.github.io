---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			ul {
        display: flex;
				flex-direction: column;
				gap: 2em;
				margin: 0;
				padding: 0;
				list-style: none;
			}
			ul li * {
				text-decoration: none;
			}
			ul li a {
				display: block;
			}
			.title {
				margin: 0 0 0.2em 0;
				line-height: 1;
        font-size: 1.55em;
				color: var(--black);
			}
			.description {
				margin: 0 0 0.2em 0;
				color: var(--black);
			}
			.date {
				margin: 0;
				color: var(--gray);
			}
			ul li a:hover h4 {
				text-decoration: underline;
				color: var(--accent);
			}
			@media (max-width: 768px) {
				ul {
					gap: 1em;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
      <h1>Blog</h1>
			<section>
				<ul>
					{
						posts.map((post) => (
							<li>
								<a href={`/blog/${post.id}/`}>
									<h2 class="title">{post.data.title}</h2>
                  <p class="description">{post.data.description}</p>
									<p class="date">
										<FormattedDate date={post.data.pubDate} />
										{post.data.updatedDate && (
											<span class="updated-date">
												~ Updated: <FormattedDate date={post.data.updatedDate} />
											</span>
										)}
									</p>
								</a>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
